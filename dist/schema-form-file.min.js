/**
 * angular-schema-form-nwp-file-upload - Upload file type for Angular Schema Form
 * @version v0.1.5
 * @link https://github.com/saburab/angular-schema-form-nwp-file-upload
 * @license MIT
 */
"use strict";angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider","sfBuilderProvider",function(e,i,a,r){var l="Wrong file type. Allowed types are ",n="This file is too large. Maximum size allowed is ",t="Current file size:",s="You have to upload at least one file",o="You can't upload more than one file.",m=function(i,r,m){if("array"===r.type&&"singlefile"===r.format){r.pattern&&r.pattern.mimeType&&!r.pattern.validationMessage&&(r.pattern.validationMessage=l),r.maxSize&&r.maxSize.maximum&&!r.maxSize.validationMessage&&(r.maxSize.validationMessage=n,r.maxSize.validationMessage2=t),r.minItems&&r.minItems.minimum&&!r.minItems.validationMessage&&(r.minItems.validationMessage=s),r.maxItems&&r.maxItems.maximum&&!r.maxItems.validationMessage&&(r.maxItems.validationMessage=o);var d=e.stdFormObj(i,r,m);return d.key=m.path,d.type="nwpFileUpload",m.lookup[a.stringify(m.path)]=d,d}};e.defaults.array.unshift(m);var d=function(i,r,m){if("array"===r.type&&"multifile"===r.format){r.pattern&&r.pattern.mimeType&&!r.pattern.validationMessage&&(r.pattern.validationMessage=l),r.maxSize&&r.maxSize.maximum&&!r.maxSize.validationMessage&&(r.maxSize.validationMessage=n,r.maxSize.validationMessage2=t),r.minItems&&r.minItems.minimum&&!r.minItems.validationMessage&&(r.minItems.validationMessage=s),r.maxItems&&r.maxItems.maximum&&!r.maxItems.validationMessage&&(r.maxItems.validationMessage=o);var d=e.stdFormObj(i,r,m);return d.key=m.path,d.type="nwpFileUpload",m.lookup[a.stringify(m.path)]=d,d}};e.defaults.array.unshift(d);var p=r.builders.ngModelOptions,c=r.builders.ngModel,u=r.builders.sfField,f=r.builders.condition,g=r.builders.complexValidation,F=[u,c,p,f,g];i.defineAddOn("bootstrapDecorator","nwpFileUpload","directives/decorators/bootstrap/nwp-file/nwp-file.html",F)}]),angular.module("ngSchemaFormFile",["ngFileUpload","ngMessages"]).controller("ngSchemaFileController",["$scope",function(e){e.initInternalModel=function(i){i&&i.type&&i.name&&(e.picFile={},e.picFile.result=i,e.picFile.name=i.name,e.picFile.progress=100,e.picFile.size=0,e.picFile.type=i.type)}}]).directive("ngSchemaFile",["Upload","$timeout","$q",function(e,i,a){return{restrict:"A",scope:!0,controller:"ngSchemaFileController",require:"ngModel",link:function(a,r,l,n){function t(r){r&&!r.$error&&a.url&&(r.upload=e.upload({url:a.url,file:r,data:{metadata:n.$modelValue}}),r.upload.then(function(e){i(function(){r.result=e.data}),n.$modelValue?n.$setViewValue(angular.merge(n.$modelValue,e.data)):n.$setViewValue(e.data),n.$commitViewValue(),o&&a.$emit("rdsSchemaFormCtrl.save",{source:"ngSchemaFile",file:r,form:a.form})},function(e){e.status>0&&(a.errorMsg=e.status+": "+e.data)}),r.upload.progress(function(e){r.progress=Math.min(100,parseInt(100*e.loaded/e.total))}))}function s(e){for(var i="",r=a.$$prevSibling;r&&r.form&&r.form.key&&r.form.key.join(".").startsWith(a.form.key.join("."));)r.form.required=e,r.$broadcast("schemaFormValidate"),i+="model."+r.form.key.join(".")+"&&",r=r.$$prevSibling;i.length>0&&(i=i.substring(0,i.length-2)),a.fieldToWatch=i}a.url=a.form&&a.form.endpoint,a.isSinglefileUpload=a.form&&a.form.schema&&"singlefile"===a.form.schema.format;var o=a.form&&a.form.saveFormAfterUploaded;a.selectFile=function(e){if(e&&(a.picFile=e,a.$$prevSibling&&a.$$prevSibling.form&&a.$$prevSibling.form.key.join(".").startsWith(a.form.key.join(".")))){s(!0);var i="evalExpr('"+a.fieldToWatch+"',{ model: model, 'arrayIndex': 0, 'modelValue': ''})";a.removeWatchForRequireMetadata=a.$watch(i,function(e){e?a.$broadcast("schemaForm.error."+a.form.key.join("."),"requireMetadata",!0):a.$broadcast("schemaForm.error."+a.form.key.join("."),"requireMetadata")})}},a.selectFiles=function(e){a.picFiles=e},a.uploadFile=function(e){e&&t(e)},a.uploadFiles=function(e){e.length&&angular.forEach(e,function(e){t(e)})},a.removeFile=function(){a.isSinglefileUpload&&(a.picFile&&a.picFile.result&&(n.$setViewValue(),n.$commitViewValue()),a.picFile=null,a.removeWatchForRequireMetadata&&(a.removeWatchForRequireMetadata(),delete a.removeWatchForRequireMetadata,a.$broadcast("schemaForm.error."+a.form.key.join("."),"requireMetadata",!0),s(!1)))},a.validateField=function(){a.uploadForm.file&&a.uploadForm.file.$valid&&a.picFile&&!a.picFile.$error||a.uploadForm.files&&a.uploadForm.files.$valid&&a.picFiles&&!a.picFiles.$error},a.submit=function(){a.uploadForm.file&&a.uploadForm.file.$valid&&a.picFile&&!a.picFile.$error?a.uploadFile(a.picFile):a.uploadForm.files&&a.uploadForm.files.$valid&&a.picFiles&&!a.picFiles.$error&&a.uploadFiles(a.picFiles)},a.$on("schemaFormValidate",a.validateField),a.$on("schemaFormFileUploadSubmit",a.submit)}}}]),angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/nwp-file/nwp-file.html",'<ng-form class="file-upload mb-lg" ng-schema-file schema-validate="form" sf-field-model="replaceAll" ng-init="initInternalModel($$value$$)" ng-model="$$value$$" name="uploadForm">\n   <label ng-show="form.title && form.notitle !== true" class="control-label" for="fileInputButton" ng-class="{\'sr-only\': !showTitle(), \'text-danger\': uploadForm.$error.required && !uploadForm.$pristine}">\n      {{ form.title }}<i ng-show="form.required">&nbsp;*</i>\n   </label>\n\n   <div ng-show="picFile" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\n      <div ng-include="\'uploadProcess.html\'" class="mb"></div>\n\t  <span class="help-block" sf-message="form.description"></span>\n   </div>\n\n   <ul ng-show="picFiles && picFiles.length" class="list-group">\n      <li class="list-group-item" ng-repeat="picFile in picFiles">\n         <div ng-include="\'uploadProcess.html\'"></div>\n      </li>\n   </ul>\n\n   <div ng-show="(isSinglefileUpload && !picFile) || (!isSinglefileUpload && (!picFiles || !picFiles.length))" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\n      <small class="text-muted" ng-show="form.description" ng-bind-html="form.description"></small>\n      <div ng-if="isSinglefileUpload" ng-include="\'singleFileUpload.html\'"></div>\n      <div ng-if="!isSinglefileUpload" ng-include="\'multiFileUpload.html\'"></div>\n      <!--<div class="help-block mb0" ng-show="uploadForm.$error.required && !uploadForm.$pristine">{{ \'modules.attribute.fields.required.caption\' | translate }}</div>-->\n      <span class="help-block" sf-message="form.description"></span>\n   </div>\n</ng-form>\n\n<script type=\'text/ng-template\' id="uploadProcess.html">\n   <div class="row mb">\n      <div class="col-sm-4 mb-sm">\n         <label title="{{ \'modules.upload.field.preview\' | translate }}" class="text-info">{{\n            \'modules.upload.field.preview\' | translate }}</label>\n         <img ngf-src="picFile" class="img-thumbnail img-responsive">\n         <div class="img-placeholder"\n              ng-class="{\'show\': picFile.$invalid && !picFile.blobUrl, \'hide\': !picFile || picFile.blobUrl}">No preview\n            available\n         </div>\n      </div>\n      <div class="col-sm-4 mb-sm">\n         <label title="{{ \'modules.upload.field.filename\' | translate }}" class="text-info">{{\n            \'modules.upload.field.filename\' | translate }}</label>\n         <div class="filename" title="{{ picFile.name }}">{{ picFile.name }}</div>\n      </div>\n      <div class="col-sm-4 mb-sm">\n         <label title="{{ \'modules.upload.field.progress\' | translate }}" class="text-info">{{\n            \'modules.upload.field.progress\' | translate }}</label>\n         <div class="progress">\n            <div class="progress-bar progress-bar-striped" role="progressbar"\n                 ng-class="{\'progress-bar-success\': picFile.progress == 100}"\n                 ng-style="{width: picFile.progress + \'%\'}">\n               {{ picFile.progress }} %\n            </div>\n         </div>\n         <button class="btn btn-primary btn-sm" type="button" ng-click="uploadFile(picFile)"\n                 ng-disabled="ngModel.$error.requireMetadata||!picFile || picFile.result || picFile.$error">{{ !picFile.result ?  "buttons.upload" : "buttons.uploaded" | translate }}\n         </button>\n         <button class="btn btn-danger btn-sm" type="button" ng-click="removeFile(picFile)"\n                 ng-disabled="!picFile || picFile.$error">{{ "buttons.remove" | translate }}\n         </button>\n      </div>\n   </div>\n   <div ng-messages="uploadForm.$error" ng-messages-multiple="">\n      <div class="text-danger errorMsg" ng-message="maxSize">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong>. ({{ form.schema[picFile.$error].validationMessage2 | translate }} <strong>{{picFile.size / 1000000|number:1}}MB</strong>)</div>\n      <div class="text-danger errorMsg" ng-message="pattern">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div>\n      <div class="text-danger errorMsg" ng-message="maxItems">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div>\n      <div class="text-danger errorMsg" ng-message="minItems">{{ form.schema[picFile.$error].validationMessage | translate }} <strong>{{picFile.$errorParam}}</strong></div>\n      <div class="text-danger errorMsg" ng-show="errorMsg">{{errorMsg}}</div>\n   </div>\n</script>\n\n<script type=\'text/ng-template\' id="singleFileUpload.html">\n   <div ngf-drop="selectFile(picFile)" ngf-select="selectFile(picFile)" type="file" ngf-multiple="false"\n        ng-model="picFile" name="file"\n        ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}"\n        ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}"\n        ng-required="form.required"\n        accept="{{form.schema.pattern && form.schema.pattern.mimeType}}"\n        ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\n      <p class="text-center">{{ \'modules.upload.descriptionSinglefile\' | translate }}</p>\n   </div>\n   <div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\n\n   <button ngf-select="selectFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file"\n           ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}"\n           ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}"\n           ng-required="form.required"\n           accept="{{form.schema.pattern && form.schema.pattern.mimeType}}"\n           ng-model-options="form.ngModelOptions" id="fileInputButton"\n           class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\n      <fa fw="fw" name="upload" class="mr-sm"></fa>\n      {{ "buttons.add" | translate }}\n   </button>\n</script>\n\n<script type=\'text/ng-template\' id="multiFileUpload.html">\n   <div ngf-drop="selectFiles(picFiles)" ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true"\n        ng-model="picFiles" name="files"\n        ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}"\n        ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}"\n        ng-required="form.required"\n        accept="{{form.schema.pattern && form.schema.pattern.mimeType}}"\n        ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\n      <p class="text-center">{{ \'modules.upload.descriptionMultifile\' | translate }}</p>\n   </div>\n   <div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\n\n   <button ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true" multiple ng-model="picFiles" name="files"\n           accept="{{form.schema.pattern && form.schema.pattern.mimeType}}"\n           ng-attr-ngf-pattern="{{form.schema.pattern && form.schema.pattern.mimeType ? form.schema.pattern.mimeType : undefined }}"\n           ng-attr-ngf-max-size="{{form.schema.maxSize && form.schema.maxSize.maximum ? form.schema.maxSize.maximum : undefined }}"\n           ng-required="form.required"\n           ng-model-options="form.ngModelOptions" id="fileInputButton"\n           class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\n      <fa fw="fw" name="upload" class="mr-sm"></fa>\n      {{ "buttons.add" | translate }}\n   </button>\n</script>\n')}]);