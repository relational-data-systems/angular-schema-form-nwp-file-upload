/**
 * angular-schema-form-nwp-file-upload - Upload file type for Angular Schema Form
 * @version v0.1.5
 * @link https://github.com/saburab/angular-schema-form-nwp-file-upload
 * @license MIT
 */
"use strict";angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider","sfBuilderProvider",function(e,i,r,l){function a(e,i,r){e.validationMessage=e.validationMessage||{};for(var l in r)i[l]&&!e.validationMessage[l]&&(e.validationMessage[l]=r[l])}function o(){function i(i,l,o){if("object"===l.type&&"singlefile"===l.format){var n=e.stdFormObj(i,l,o);return n.key=o.path,n.type="nwpFileUpload",o.lookup[r.stringify(o.path)]=n,a(n,l,t),n}}function l(i,l,o){if("array"===l.type&&"multifile"===l.format){var t=e.stdFormObj(i,l,o);return t.key=o.path,t.type="nwpFileUpload",o.lookup[r.stringify(o.path)]=t,a(t,l,n),t}}e.defaults.array.unshift(i),e.defaults.array.unshift(l)}var t={maxSize:"This file is too large ({{file.size / 1000000 | number:1}}MB). Maximum size allowed is {{schema.maxSize}}",mimeType:"Wrong file type. Allowed types are {{schema.mimeType}}"},n={maxSize:t.maxSize,mimeType:t.mimeType,minItems:"You have to upload at least {{schema.minItems}} file(s)",maxItems:"You can't upload more than {{schema.maxItems}} file(s)."};o(),i.defineAddOn("bootstrapDecorator","nwpFileUpload","directives/decorators/bootstrap/nwp-file/schema-form-file.html",l.stdBuilders)}]),angular.module("ngSchemaFormFile",["ngFileUpload","ngMessages","pascalprecht.translate"]).controller("ngSchemaFileController",["$scope","$log","Upload","$interpolate","$translate","$timeout","$q","$http","$window",function(e,i,r,l,a,o,t,n,s){function m(i){S=i,M=e.form&&e.form.endpoint,e.isSinglefileUpload=e.form&&e.form.schema&&"singlefile"===e.form.schema.format,e.$on("schemaFormValidate",e.validateField),e.$on("schemaFormFileUploadSubmit",e.submit),o(w)}function d(){S.$setViewValue(),S.$commitViewValue()}function p(){var i=e.uploadForm.file;i.$setViewValue(),i.$commitViewValue(),delete e.picFile}function c(i){for(var r="",l=e.$$prevSibling;l&&l.form&&l.form.key&&l.form.key.join(".").startsWith(e.form.key.join("."));)l.form.required=i,l.$broadcast("schemaFormValidate"),r+="model."+l.form.key.join(".")+"&&",l=l.$$prevSibling;r.length>0&&(r=r.substring(0,r.length-2)),e.fieldToWatch=r}function f(){var e=S.$modelValue;if(e){var i=e.idPropertyName;if(i)return S.$modelValue[i]}}function u(){y(),d(),p(),e.removeWatchForRequireMetadata&&(e.removeWatchForRequireMetadata(),delete e.removeWatchForRequireMetadata,e.$broadcast("schemaForm.error."+e.form.key.join("."),"requireMetadata",!0),c(!1))}function g(e){v(angular.merge({},e,{progress:100})),F(S.$modelValue)}function h(e){var i;404===e.status?(i='File "{{ file.name }}" no longer exists on server, please upload again.',v({progress:0,status:"none"})):410===e.status?(i='File "{{ file.name }}" is expired, please upload again.',v({progress:0,status:"expired"})):(i='Failed to get file "{{ file.name }}" from server: '+e.statusText,v({progress:0,status:"sync_error"})),$(i)}function v(e){S.$modelValue?S.$setViewValue(angular.merge(S.$modelValue,e)):S.$setViewValue(e),S.$commitViewValue()}function F(i){e.picFile={result:i,name:i.name,progress:angular.isNumber(i.progress)?i.progress:0,size:angular.isNumber(i.size)?i.size:void 0,type:i.type,status:i.status}}function b(i){i&&!i.$error&&M&&(y(),i.upload=r.upload({url:M,file:i,data:{metadata:S.$modelValue}}),i.upload.then(function(r){var l=r.data;o(function(){i.result=l}),v(l);var a=e.form&&e.form.saveFormAfterUploaded;a&&e.$emit("rdsSchemaFormCtrl.save",{source:"ngSchemaFile",file:i,form:e.form})},function(e){e.status>0&&($("File Upload Failed!"),delete i.progress)}),i.upload.progress(function(r){e.errorMsg?delete i.progress:i.progress=Math.min(100,parseInt(100*r.loaded/r.total))}))}function $(i){var r=l(i)({file:S.$modelValue});e.errorMsg=r}function y(){delete e.errorMsg}function w(){if(!e.isSinglefileUpload)return void i.warn("ngSchemaFileController#syncFileStatus - only support single file at the moment");var r=f();return r?void n({method:"GET",url:M+"/"+r}).then(function(e){g(e.data)})["catch"](function(e){h(e)}):void i.info("ngSchemaFileController#syncFileStatus - skipped due to id is: "+r)}var M,x=this,S=null;x.init=m,e.selectFile=function(r){if(r){if(e.picFile=r,e.$$prevSibling&&e.$$prevSibling.form){var l=e.$$prevSibling.form.key;if(l&&l.join(".").startsWith(e.form.key.join("."))){c(!0);var a="evalExpr('"+e.fieldToWatch+"',{ model: model, 'arrayIndex': 0, 'modelValue': ''})";e.removeWatchForRequireMetadata=e.$watch(a,function(i){i?e.$broadcast("schemaForm.error."+e.getModelPath().join("."),"requireMetadata",null,!0):e.$broadcast("schemaForm.error."+e.getModelPath().join("."),"requireMetadata",null,!1)})}}e.form&&e.form.autoUploadOnSelect===!0&&o(function(){S.$valid?e.uploadFile(r):i.debug("ngSchemaFileController#selectFile - ngModel is invlid, skip auto upload")})}},e.selectFiles=function(i){e.picFiles=i},e.uploadFile=function(e){e&&b(e)},e.uploadFiles=function(e){e.length&&angular.forEach(e,function(e){b(e)})},e.validateField=function(){e.uploadForm.file&&e.uploadForm.file.$valid&&e.picFile&&!e.picFile.$error||e.uploadForm.files&&e.uploadForm.files.$valid&&e.picFiles&&!e.picFiles.$error},e.submit=function(){e.uploadForm.file&&e.uploadForm.file.$valid&&e.picFile&&!e.picFile.$error?e.uploadFile(e.picFile):e.uploadForm.files&&e.uploadForm.files.$valid&&e.picFiles&&!e.picFiles.$error&&e.uploadFiles(e.picFiles)},e.removeFile=function(){if(!e.isSinglefileUpload)return void i.warn("ngSchemaFileController#removeFile - only support single file at the moment");var r=f();r?n({method:"DELETE",url:M+"/"+r}).then(function(e){var i=e.data;i?u():s.alert("Failed to remove file.")},function(e){s.alert("An error happened when deleting the file: "+e.statusText),i.error(e)}):(i.info("ngSchemaFileController#removeFile - remove the file without remote call due to id is: "+r),u())},e.isValidFile=function(){var i=e.picFile;return!!i&&("none"!==i.status&&"expired"!==i.status)},e.interpValidationMessage=function(i){if(i){var r,o=i.$error,t=e.form,n=t.validationMessage;if(angular.isString(n)?r=n:angular.isObject(n)&&(r=n[o]),!r)return o;var s={error:o,file:i,form:t,schema:t.schema,title:t.title||t.schema&&t.schema.title},m=l(r)(s);return a.instant(m)}}}]).directive("ngSchemaFile",function(){return{restrict:"A",$scope:!0,controller:"ngSchemaFileController",controllerAs:"fileUploadCtrl",require:"ngModel",link:function(e,i,r,l){e.fileUploadCtrl.init(l)}}}),angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.html",'<ng-form class="file-upload mb-lg" ng-schema-file schema-validate="form" sf-field-model="replaceAll" ng-model="$$value$$" name="uploadForm">\n  <label ng-show="form.title && form.notitle !== true" class="control-label" for="fileInputButton" ng-class="{\'sr-only\': !showTitle(), \'text-danger\': uploadForm.$error.required && !uploadForm.$pristine}">\n    {{ form.title }}<i ng-show="form.required">&nbsp;*</i>\n  </label>\n\n  <div ng-show="picFile" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\n    <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html\'" class="mb"></div>\n    <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html\'" class="mb"></div>\n    <span class="help-block" sf-message="form.description"></span>\n  </div>\n\n  <ul ng-show="picFiles && picFiles.length" class="list-group">\n    <li class="list-group-item" ng-repeat="picFile in picFiles">\n      <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html\'"></div>\n      <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html\'" class="mb"></div>\n    </li>\n  </ul>\n\n  <div ng-show="(isSinglefileUpload && !picFile) || (!isSinglefileUpload && (!picFiles || !picFiles.length))" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\n    <small class="text-muted" ng-show="form.description" ng-bind-html="form.description"></small>\n    <div ng-if="isSinglefileUpload" ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.single.html\'"></div>\n    <div ng-if="!isSinglefileUpload" ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.multiple.html\'"></div>\n    <!--<div class="help-block mb0" ng-show="uploadForm.$error.required && !uploadForm.$pristine">{{ \'modules.attribute.fields.required.caption\' | translate }}</div>-->\n    <span ng-if="errorMsg" class="text-danger">{{ errorMsg }}</span>\n    <span class="help-block" sf-message="form.description"></span>\n  </div>\n</ng-form>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html",'<div ng-messages="uploadForm.$error" ng-messages-multiple="">\n  <div class="text-danger errorMsg" ng-message="maxSize">{{ interpValidationMessage(picFile) }}</div>\n  <div class="text-danger errorMsg" ng-message="mimeType">{{ interpValidationMessage(picFile) }}</div>\n  <div class="text-danger errorMsg" ng-message="maxItems">{{ interpValidationMessage(picFile) }}</div>\n  <div class="text-danger errorMsg" ng-message="minItems">{{ interpValidationMessage(picFile) }}</div>\n  <div class="text-danger errorMsg" ng-show="errorMsg">{{ errorMsg }}</div>\n</div>'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.multiple.html",'<div ngf-drop="selectFiles(picFiles)" ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true"\n    ng-model="picFiles" name="files"\n    ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n    ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n    ng-required="form.required"\n    accept="{{form.schema.mimeType}}"\n    ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\n  <p class="text-center">{{ \'modules.upload.descriptionMultifile\' | translate }}</p>\n</div>\n<div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\n\n<button ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true" multiple ng-model="picFiles" name="files"\n       ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n       ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n       ng-required="form.required"\n       accept="{{form.schema.mimeType}}"\n       ng-model-options="form.ngModelOptions" id="fileInputButton"\n       class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\n  <fa fw="fw" name="upload" class="mr-sm"></fa>\n  {{ "buttons.add" | translate }}\n</button>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html",'<div class="row mb">\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.preview\' | translate }}" class="text-info">{{\n        \'modules.upload.field.preview\' | translate }}</label>\n     <img ngf-src="picFile" class="img-thumbnail img-responsive">\n     <div class="img-placeholder"\n          ng-class="{\'show\': picFile.$invalid && !picFile.blobUrl, \'hide\': !picFile || picFile.blobUrl}">No preview available\n     </div>\n  </div>\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.filename\' | translate }}" class="text-info">{{\n        \'modules.upload.field.filename\' | translate }}</label>\n     <div class="filename" title="{{ picFile.name }}">{{ picFile.name }}</div>\n  </div>\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.progress\' | translate }}" class="text-info">{{\n        \'modules.upload.field.progress\' | translate }}</label>\n     <div class="progress">\n        <div class="progress-bar progress-bar-striped" role="progressbar"\n             ng-class="{\'progress-bar-success\': picFile.progress == 100}"\n             ng-style="{width: picFile.progress + \'%\'}">\n           {{ picFile.progress }} %\n        </div>\n     </div>\n     <button class="btn btn-primary btn-sm" type="button" ng-click="uploadFile(picFile)"\n             ng-disabled="ngModel.$error.requireMetadata||!picFile || picFile.result || picFile.$error">{{ !picFile.result ?  "buttons.upload" : "buttons.uploaded" | translate }}\n     </button>\n     <button class="btn btn-danger btn-sm" type="button" ng-click="removeFile(picFile)"\n             ng-disabled="!picFile">{{ "buttons.remove" | translate }}\n     </button>\n  </div>\n</div>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.single.html",'<div ngf-drop="selectFile(picFile)" ngf-select="selectFile(picFile)" type="file" ngf-multiple="false"\n    ng-model="picFile" name="file"\n    ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n    ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n    ng-required="form.required"\n    accept="{{form.schema.mimeType}}"\n    ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\n  <p class="text-center">{{ \'modules.upload.descriptionSinglefile\' | translate }}</p>\n</div>\n<div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\n\n<button ngf-select="selectFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file"\n       ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n       ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n       ng-required="form.required"\n       accept="{{form.schema.mimeType}}"\n       ng-model-options="form.ngModelOptions" id="fileInputButton"\n       class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\n  <fa fw="fw" name="upload" class="mr-sm"></fa>\n  {{ "buttons.add" | translate }}\n</button>\n')}]);