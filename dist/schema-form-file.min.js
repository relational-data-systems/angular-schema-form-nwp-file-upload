/**
 * angular-schema-form-nwp-file-upload - Upload file type for Angular Schema Form
 * @version v0.1.5
 * @link https://github.com/saburab/angular-schema-form-nwp-file-upload
 * @license MIT
 */
"use strict";angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider","sfBuilderProvider",function(e,i,l,r){function o(e,i,l){e.validationMessage=e.validationMessage||{};for(var r in l)i[r]&&!e.validationMessage[r]&&(e.validationMessage[r]=l[r])}function n(){function i(i,r,n){if("object"===r.type&&"singlefile"===r.format){var t=e.stdFormObj(i,r,n);return t.key=n.path,t.type="nwpFileUpload",n.lookup[l.stringify(n.path)]=t,o(t,r,a),t}}function r(i,r,n){if("array"===r.type&&"multifile"===r.format){var a=e.stdFormObj(i,r,n);return a.key=n.path,a.type="nwpFileUpload",n.lookup[l.stringify(n.path)]=a,o(a,r,t),a}}e.defaults.array.unshift(i),e.defaults.array.unshift(r)}var a={maxSize:"This file is too large ({{file.size / 1000000 | number:1}}MB). Maximum size allowed is {{schema.maxSize}}",mimeType:"Wrong file type. Allowed types are {{schema.mimeType}}"},t={maxSize:a.maxSize,mimeType:a.mimeType,minItems:"You have to upload at least {{schema.minItems}} file(s)",maxItems:"You can't upload more than {{schema.maxItems}} file(s)."};n(),i.defineAddOn("bootstrapDecorator","nwpFileUpload","directives/decorators/bootstrap/nwp-file/schema-form-file.html",r.stdBuilders)}]),angular.module("ngSchemaFormFile",["ngFileUpload","ngMessages","pascalprecht.translate"]).controller("ngSchemaFileController",["$scope","$log","Upload","$interpolate","$translate","$timeout","$q","$http","$window",function(e,i,l,r,o,n,a,t,s){function m(r){function o(){var e=f.$modelValue;if(e){var i=e.primaryKeyPropertyName;if(i)return f.$modelValue[i]}}function a(){g(),c.picFile&&c.picFile.result&&(f.$setViewValue(),f.$commitViewValue()),c.picFile=null,c.removeWatchForRequireMetadata&&(c.removeWatchForRequireMetadata(),delete c.removeWatchForRequireMetadata,c.$broadcast("schemaForm.error."+c.form.key.join("."),"requireMetadata",!0),h(!1))}function m(e){f.$modelValue?f.$setViewValue(angular.merge(f.$modelValue,e)):f.$setViewValue(e),f.$commitViewValue()}function p(e){e&&!e.$error&&d&&(g(),e.upload=l.upload({url:d,file:e,data:{metadata:f.$modelValue}}),e.upload.then(function(i){var l=i.data;n(function(){e.result=l}),m(l);var r=c.form&&c.form.saveFormAfterUploaded;r&&c.$emit("rdsSchemaFormCtrl.save",{source:"ngSchemaFile",file:e,form:c.form})},function(i){i.status>0&&(u("File Upload Failed!"),delete e.progress)}),e.upload.progress(function(i){c.errorMsg?delete e.progress:e.progress=Math.min(100,parseInt(100*i.loaded/i.total))}))}function u(e){c.errorMsg=e}function g(){delete c.errorMsg}function h(e){for(var i="",l=c.$$prevSibling;l&&l.form&&l.form.key&&l.form.key.join(".").startsWith(c.form.key.join("."));)l.form.required=e,l.$broadcast("schemaFormValidate"),i+="model."+l.form.key.join(".")+"&&",l=l.$$prevSibling;i.length>0&&(i=i.substring(0,i.length-2)),c.fieldToWatch=i}f=r,c=e,d=c.form&&c.form.endpoint,c.isSinglefileUpload=c.form&&c.form.schema&&"singlefile"===c.form.schema.format,c.selectFile=function(e){if(e){if(c.picFile=e,c.$$prevSibling&&c.$$prevSibling.form&&c.$$prevSibling.form.key.join(".").startsWith(c.form.key.join("."))){h(!0);var l="evalExpr('"+c.fieldToWatch+"',{ model: model, 'arrayIndex': 0, 'modelValue': ''})";c.removeWatchForRequireMetadata=c.$watch(l,function(e){e?c.$broadcast("schemaForm.error."+c.getModelPath().join("."),"requireMetadata",null,!0):c.$broadcast("schemaForm.error."+c.getModelPath().join("."),"requireMetadata",null,!1)})}c.form&&c.form.autoUploadOnSelect===!0&&n(function(){f.$valid?c.uploadFile(e):i.debug("ngSchemaFileController#selectFile - ngModel is invlid, skip auto upload")})}},c.selectFiles=function(e){c.picFiles=e},c.uploadFile=function(e){e&&p(e)},c.uploadFiles=function(e){e.length&&angular.forEach(e,function(e){p(e)})},c.syncFileStatus=function(){if(!c.isSinglefileUpload)return void i.warn("ngSchemaFileController#syncFileStatus - only support single file at the moment");var e=o();return e?void t({method:"GET",url:d+"/"+e}).then(function(e){m(e.data)})["catch"](function(e){s.alert("An error happened when deleting the file: "+e.statusText),i.error(e)}):void i.warn("ngSchemaFileController#removeFile - skipped due to id is: "+e)},c.removeFile=function(){if(!c.isSinglefileUpload)return void i.warn("ngSchemaFileController#removeFile - only support single file at the moment");var e=o();return e?void t({method:"DELETE",url:d+"/"+e}).then(function(e){var i=e.data;i?a():s.alert("Failed to remove file.")},function(e){s.alert("An error happened when deleting the file: "+e.statusText),i.error(e)}):void i.warn("ngSchemaFileController#removeFile - aborted due to id is: "+e)},c.validateField=function(){c.uploadForm.file&&c.uploadForm.file.$valid&&c.picFile&&!c.picFile.$error||c.uploadForm.files&&c.uploadForm.files.$valid&&c.picFiles&&!c.picFiles.$error},c.submit=function(){c.uploadForm.file&&c.uploadForm.file.$valid&&c.picFile&&!c.picFile.$error?c.uploadFile(c.picFile):c.uploadForm.files&&c.uploadForm.files.$valid&&c.picFiles&&!c.picFiles.$error&&c.uploadFiles(c.picFiles)},c.$on("schemaFormValidate",c.validateField),c.$on("schemaFormFileUploadSubmit",c.submit)}var d,p=this,c=null,f=null;p.init=m,e.initInternalModel=function(i){i&&i.type&&i.name&&(e.picFile={},e.picFile.result=i,e.picFile.name=i.name,e.picFile.progress=100,e.picFile.size=0,e.picFile.type=i.type)},e.interpValidationMessage=function(e){var i,l=e.$error,n=c.form,a=n.validationMessage;if(angular.isString(a)?i=a:angular.isObject(a)&&(i=a[l]),!i)return l;var t={error:l,file:e,form:n,schema:n.schema,title:n.title||n.schema&&n.schema.title},s=r(i)(t);return o.instant(s)}}]).directive("ngSchemaFile",function(){return{restrict:"A",scope:!0,controller:"ngSchemaFileController",controllerAs:"fileUploadCtrl",require:"ngModel",link:function(e,i,l,r){e.fileUploadCtrl.init(r)}}}),angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.html",'<ng-form class="file-upload mb-lg" ng-schema-file schema-validate="form" sf-field-model="replaceAll" ng-init="initInternalModel($$value$$)" ng-model="$$value$$" name="uploadForm">\n  <label ng-show="form.title && form.notitle !== true" class="control-label" for="fileInputButton" ng-class="{\'sr-only\': !showTitle(), \'text-danger\': uploadForm.$error.required && !uploadForm.$pristine}">\n    {{ form.title }}<i ng-show="form.required">&nbsp;*</i>\n  </label>\n\n  <div ng-show="picFile" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\n    <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html\'" class="mb"></div>\n    <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html\'" class="mb"></div>\n    <span class="help-block" sf-message="form.description"></span>\n  </div>\n\n  <ul ng-show="picFiles && picFiles.length" class="list-group">\n    <li class="list-group-item" ng-repeat="picFile in picFiles">\n      <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html\'"></div>\n      <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html\'" class="mb"></div>\n    </li>\n  </ul>\n\n  <div ng-show="(isSinglefileUpload && !picFile) || (!isSinglefileUpload && (!picFiles || !picFiles.length))" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\n    <small class="text-muted" ng-show="form.description" ng-bind-html="form.description"></small>\n    <div ng-if="isSinglefileUpload" ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.single.html\'"></div>\n    <div ng-if="!isSinglefileUpload" ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.multiple.html\'"></div>\n    <!--<div class="help-block mb0" ng-show="uploadForm.$error.required && !uploadForm.$pristine">{{ \'modules.attribute.fields.required.caption\' | translate }}</div>-->\n    <span class="help-block" sf-message="form.description"></span>\n  </div>\n</ng-form>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html",'<div ng-messages="uploadForm.$error" ng-messages-multiple="">\n  <div class="text-danger errorMsg" ng-message="maxSize">{{ interpValidationMessage(picFile) }}</div>\n  <div class="text-danger errorMsg" ng-message="mimeType">{{ interpValidationMessage(picFile) }}</div>\n  <div class="text-danger errorMsg" ng-message="maxItems">{{ interpValidationMessage(picFile) }}</div>\n  <div class="text-danger errorMsg" ng-message="minItems">{{ interpValidationMessage(picFile) }}</div>\n  <div class="text-danger errorMsg" ng-show="errorMsg">{{ errorMsg }}</div>\n</div>'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.multiple.html",'<div ngf-drop="selectFiles(picFiles)" ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true"\n    ng-model="picFiles" name="files"\n    ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n    ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n    ng-required="form.required"\n    accept="{{form.schema.mimeType}}"\n    ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\n  <p class="text-center">{{ \'modules.upload.descriptionMultifile\' | translate }}</p>\n</div>\n<div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\n\n<button ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true" multiple ng-model="picFiles" name="files"\n       ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n       ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n       ng-required="form.required"\n       accept="{{form.schema.mimeType}}"\n       ng-model-options="form.ngModelOptions" id="fileInputButton"\n       class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\n  <fa fw="fw" name="upload" class="mr-sm"></fa>\n  {{ "buttons.add" | translate }}\n</button>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html",'<div class="row mb">\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.preview\' | translate }}" class="text-info">{{\n        \'modules.upload.field.preview\' | translate }}</label>\n     <img ngf-src="picFile" class="img-thumbnail img-responsive">\n     <div class="img-placeholder"\n          ng-class="{\'show\': picFile.$invalid && !picFile.blobUrl, \'hide\': !picFile || picFile.blobUrl}">No preview available\n     </div>\n  </div>\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.filename\' | translate }}" class="text-info">{{\n        \'modules.upload.field.filename\' | translate }}</label>\n     <div class="filename" title="{{ picFile.name }}">{{ picFile.name }}</div>\n  </div>\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.progress\' | translate }}" class="text-info">{{\n        \'modules.upload.field.progress\' | translate }}</label>\n     <div class="progress">\n        <div class="progress-bar progress-bar-striped" role="progressbar"\n             ng-class="{\'progress-bar-success\': picFile.progress == 100}"\n             ng-style="{width: picFile.progress + \'%\'}">\n           {{ picFile.progress }} %\n        </div>\n     </div>\n     <button class="btn btn-primary btn-sm" type="button" ng-click="uploadFile(picFile)"\n             ng-disabled="ngModel.$error.requireMetadata||!picFile || picFile.result || picFile.$error">{{ !picFile.result ?  "buttons.upload" : "buttons.uploaded" | translate }}\n     </button>\n     <button class="btn btn-danger btn-sm" type="button" ng-click="removeFile(picFile)"\n             ng-disabled="!picFile">{{ "buttons.remove" | translate }}\n     </button>\n  </div>\n</div>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.single.html",'<div ngf-drop="selectFile(picFile)" ngf-select="selectFile(picFile)" type="file" ngf-multiple="false"\n    ng-model="picFile" name="file"\n    ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n    ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n    ng-required="form.required"\n    accept="{{form.schema.mimeType}}"\n    ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\n  <p class="text-center">{{ \'modules.upload.descriptionSinglefile\' | translate }}</p>\n</div>\n<div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\n\n<button ngf-select="selectFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file"\n       ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n       ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n       ng-required="form.required"\n       accept="{{form.schema.mimeType}}"\n       ng-model-options="form.ngModelOptions" id="fileInputButton"\n       class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\n  <fa fw="fw" name="upload" class="mr-sm"></fa>\n  {{ "buttons.add" | translate }}\n</button>\n')}]);