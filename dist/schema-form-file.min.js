/**
 * angular-schema-form-nwp-file-upload - Upload file type for Angular Schema Form
 * @version v0.1.5
 * @link https://github.com/saburab/angular-schema-form-nwp-file-upload
 * @license MIT
 */
"use strict";angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider","sfBuilderProvider",function(e,i,l,r){function o(e,i,l){e.validationMessage=e.validationMessage||{};for(var r in l)i[r]&&!e.validationMessage[r]&&(e.validationMessage[r]=l[r])}function a(){function i(i,r,a){if("object"===r.type&&"singlefile"===r.format){var t=e.stdFormObj(i,r,a);return t.key=a.path,t.type="nwpFileUpload",a.lookup[l.stringify(a.path)]=t,o(t,r,n),t}}function r(i,r,a){if("array"===r.type&&"multifile"===r.format){var n=e.stdFormObj(i,r,a);return n.key=a.path,n.type="nwpFileUpload",a.lookup[l.stringify(a.path)]=n,o(n,r,t),n}}e.defaults.array.unshift(i),e.defaults.array.unshift(r)}var n={mimeType:"Wrong file type. Allowed types are ",maxSize:"This file is too large. Maximum size allowed is "},t={mimeType:"Wrong file type. Allowed types are ",maxSize:"This file is too large. Maximum size allowed is ",minItems:"You have to upload at least one file",maxItems:"You can't upload more than one file."};a(),i.defineAddOn("bootstrapDecorator","nwpFileUpload","directives/decorators/bootstrap/nwp-file/schema-form-file.html",r.stdBuilders)}]),angular.module("ngSchemaFormFile",["ngFileUpload","ngMessages"]).controller("ngSchemaFileController",["$scope","Upload","$timeout","$q",function(e,i,l,r){function o(r){function o(e){e&&!e.$error&&n.url&&(e.upload=i.upload({url:n.url,file:e,data:{metadata:t.$modelValue}}),e.upload.then(function(i){l(function(){e.result=i.data}),t.$modelValue?t.$setViewValue(angular.merge(t.$modelValue,i.data)):t.$setViewValue(i.data),t.$commitViewValue();var r=n.form&&n.form.saveFormAfterUploaded;r&&n.$emit("rdsSchemaFormCtrl.save",{source:"ngSchemaFile",file:e,form:n.form})},function(e){e.status>0&&(n.errorMsg=e.status+": "+e.data)}),e.upload.progress(function(i){e.progress=Math.min(100,parseInt(100*i.loaded/i.total))}))}function a(e){for(var i="",l=n.$$prevSibling;l&&l.form&&l.form.key&&l.form.key.join(".").startsWith(n.form.key.join("."));)l.form.required=e,l.$broadcast("schemaFormValidate"),i+="model."+l.form.key.join(".")+"&&",l=l.$$prevSibling;i.length>0&&(i=i.substring(0,i.length-2)),n.fieldToWatch=i}t=r,n=e,n.url=n.form&&n.form.endpoint,n.isSinglefileUpload=n.form&&n.form.schema&&"singlefile"===n.form.schema.format,n.selectFile=function(e){if(e&&(n.picFile=e,n.$$prevSibling&&n.$$prevSibling.form&&n.$$prevSibling.form.key.join(".").startsWith(n.form.key.join(".")))){a(!0);var i="evalExpr('"+n.fieldToWatch+"',{ model: model, 'arrayIndex': 0, 'modelValue': ''})";n.removeWatchForRequireMetadata=n.$watch(i,function(e){e?n.$broadcast("schemaForm.error."+n.getModelPath().join("."),"requireMetadata",null,!0):n.$broadcast("schemaForm.error."+n.getModelPath().join("."),"requireMetadata",null,!1)})}},n.selectFiles=function(e){n.picFiles=e},n.uploadFile=function(e){e&&o(e)},n.uploadFiles=function(e){e.length&&angular.forEach(e,function(e){o(e)})},n.removeFile=function(){n.isSinglefileUpload&&(n.picFile&&n.picFile.result&&(t.$setViewValue(),t.$commitViewValue()),n.picFile=null,n.removeWatchForRequireMetadata&&(n.removeWatchForRequireMetadata(),delete n.removeWatchForRequireMetadata,n.$broadcast("schemaForm.error."+n.form.key.join("."),"requireMetadata",!0),a(!1)))},n.validateField=function(){n.uploadForm.file&&n.uploadForm.file.$valid&&n.picFile&&!n.picFile.$error||n.uploadForm.files&&n.uploadForm.files.$valid&&n.picFiles&&!n.picFiles.$error},n.submit=function(){n.uploadForm.file&&n.uploadForm.file.$valid&&n.picFile&&!n.picFile.$error?n.uploadFile(n.picFile):n.uploadForm.files&&n.uploadForm.files.$valid&&n.picFiles&&!n.picFiles.$error&&n.uploadFiles(n.picFiles)},n.$on("schemaFormValidate",n.validateField),n.$on("schemaFormFileUploadSubmit",n.submit)}var a=this,n=null,t=null;a.init=o,e.initInternalModel=function(i){i&&i.type&&i.name&&(e.picFile={},e.picFile.result=i,e.picFile.name=i.name,e.picFile.progress=100,e.picFile.size=0,e.picFile.type=i.type)}}]).directive("ngSchemaFile",function(){return{restrict:"A",scope:!0,controller:"ngSchemaFileController",controllerAs:"fileUploadCtrl",require:"ngModel",link:function(e,i,l,r){e.fileUploadCtrl.init(r)}}}),angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.html",'<ng-form class="file-upload mb-lg" ng-schema-file schema-validate="form" sf-field-model="replaceAll" ng-init="initInternalModel($$value$$)" ng-model="$$value$$" name="uploadForm">\n   <label ng-show="form.title && form.notitle !== true" class="control-label" for="fileInputButton" ng-class="{\'sr-only\': !showTitle(), \'text-danger\': uploadForm.$error.required && !uploadForm.$pristine}">\n      {{ form.title }}<i ng-show="form.required">&nbsp;*</i>\n   </label>\n\n   <div ng-show="picFile" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\n      <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html\'" class="mb"></div>\n\t  <span class="help-block" sf-message="form.description"></span>\n   </div>\n\n   <ul ng-show="picFiles && picFiles.length" class="list-group">\n      <li class="list-group-item" ng-repeat="picFile in picFiles">\n         <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html\'"></div>\n      </li>\n   </ul>\n\n   <div ng-show="(isSinglefileUpload && !picFile) || (!isSinglefileUpload && (!picFiles || !picFiles.length))" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\n      <small class="text-muted" ng-show="form.description" ng-bind-html="form.description"></small>\n      <div ng-if="isSinglefileUpload" ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.single.html\'"></div>\n      <div ng-if="!isSinglefileUpload" ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.multiple.html\'"></div>\n      <!--<div class="help-block mb0" ng-show="uploadForm.$error.required && !uploadForm.$pristine">{{ \'modules.attribute.fields.required.caption\' | translate }}</div>-->\n      <span class="help-block" sf-message="form.description"></span>\n   </div>\n</ng-form>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.multiple.html",'<div ngf-drop="selectFiles(picFiles)" ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true"\n    ng-model="picFiles" name="files"\n    ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n    ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n    ng-required="form.required"\n    accept="{{form.schema.mimeType}}"\n    ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\n  <p class="text-center">{{ \'modules.upload.descriptionMultifile\' | translate }}</p>\n</div>\n<div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\n\n<button ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true" multiple ng-model="picFiles" name="files"\n       accept="{{form.schema.mimeType}}"\n       ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n       ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n       ng-required="form.required"\n       ng-model-options="form.ngModelOptions" id="fileInputButton"\n       class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\n  <fa fw="fw" name="upload" class="mr-sm"></fa>\n  {{ "buttons.add" | translate }}\n</button>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html",'<div class="row mb">\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.preview\' | translate }}" class="text-info">{{\n        \'modules.upload.field.preview\' | translate }}</label>\n     <img ngf-src="picFile" class="img-thumbnail img-responsive">\n     <div class="img-placeholder"\n          ng-class="{\'show\': picFile.$invalid && !picFile.blobUrl, \'hide\': !picFile || picFile.blobUrl}">No preview\n        available\n     </div>\n  </div>\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.filename\' | translate }}" class="text-info">{{\n        \'modules.upload.field.filename\' | translate }}</label>\n     <div class="filename" title="{{ picFile.name }}">{{ picFile.name }}</div>\n  </div>\n  <div class="col-sm-4 mb-sm">\n     <label title="{{ \'modules.upload.field.progress\' | translate }}" class="text-info">{{\n        \'modules.upload.field.progress\' | translate }}</label>\n     <div class="progress">\n        <div class="progress-bar progress-bar-striped" role="progressbar"\n             ng-class="{\'progress-bar-success\': picFile.progress == 100}"\n             ng-style="{width: picFile.progress + \'%\'}">\n           {{ picFile.progress }} %\n        </div>\n     </div>\n     <button class="btn btn-primary btn-sm" type="button" ng-click="uploadFile(picFile)"\n             ng-disabled="ngModel.$error.requireMetadata||!picFile || picFile.result || picFile.$error">{{ !picFile.result ?  "buttons.upload" : "buttons.uploaded" | translate }}\n     </button>\n     <button class="btn btn-danger btn-sm" type="button" ng-click="removeFile(picFile)"\n             ng-disabled="!picFile || picFile.$error">{{ "buttons.remove" | translate }}\n     </button>\n  </div>\n</div>\n<div ng-messages="uploadForm.$error" ng-messages-multiple="">\n  <div class="text-danger errorMsg" ng-message="maxSize">{{ form.validationMessage[picFile.$error] | translate }} <strong>{{picFile.$errorParam}}</strong>. (<strong>{{picFile.size / 1000000|number:1}}MB</strong>)</div>\n  <div class="text-danger errorMsg" ng-message="mimeType">{{ form.validationMessage[picFile.$error] | translate }} <strong>{{picFile.$errorParam}}</strong></div>\n  <div class="text-danger errorMsg" ng-message="maxItems">{{ form.validationMessage[picFile.$error] | translate }} <strong>{{picFile.$errorParam}}</strong></div>\n  <div class="text-danger errorMsg" ng-message="minItems">{{ form.validationMessage[picFile.$error] | translate }} <strong>{{picFile.$errorParam}}</strong></div>\n  <div class="text-danger errorMsg" ng-show="errorMsg">{{errorMsg}}</div>\n</div>\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.single.html",'<div ngf-drop="selectFile(picFile)" ngf-select="selectFile(picFile)" type="file" ngf-multiple="false"\n    ng-model="picFile" name="file"\n    ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n    ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n    ng-required="form.required"\n    accept="{{form.schema.mimeType}}"\n    ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\n  <p class="text-center">{{ \'modules.upload.descriptionSinglefile\' | translate }}</p>\n</div>\n<div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\n\n<button ngf-select="selectFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file"\n       ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\n       ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\n       ng-required="form.required"\n       accept="{{form.schema.mimeType}}"\n       ng-model-options="form.ngModelOptions" id="fileInputButton"\n       class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\n  <fa fw="fw" name="upload" class="mr-sm"></fa>\n  {{ "buttons.add" | translate }}\n</button>\n')}]);