/**
 * angular-schema-form-nwp-file-upload - Upload file type for Angular Schema Form
 * @version v0.1.5
 * @link https://github.com/saburab/angular-schema-form-nwp-file-upload
 * @license MIT
 */
"use strict";angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider","sfBuilderProvider",function(e,r,i,l){function a(e,r,i){e.validationMessage=e.validationMessage||{};for(var l in i)r[l]&&!e.validationMessage[l]&&(e.validationMessage[l]=i[l])}function o(){function r(r,l,o){if("object"===l.type&&"singlefile"===l.format){var t=e.stdFormObj(r,l,o);return t.key=o.path,t.type="nwpFileUpload",o.lookup[i.stringify(o.path)]=t,a(t,l,n),t}}function l(r,l,o){if("array"===l.type&&"multifile"===l.format){var n=e.stdFormObj(r,l,o);return n.key=o.path,n.type="nwpFileUpload",o.lookup[i.stringify(o.path)]=n,a(n,l,t),n}}e.defaults.array.unshift(r),e.defaults.array.unshift(l)}var n={maxSize:"This file is too large ({{file.size / 1000000 | number:1}}MB). Maximum size allowed is {{schema.maxSize}}",mimeType:"Wrong file type. Allowed types are {{schema.mimeType}}"},t={maxSize:n.maxSize,mimeType:n.mimeType,minItems:"You have to upload at least {{schema.minItems}} file(s)",maxItems:"You can't upload more than {{schema.maxItems}} file(s)."};o(),r.defineAddOn("bootstrapDecorator","nwpFileUpload","directives/decorators/bootstrap/nwp-file/schema-form-file.html",l.stdBuilders)}]),angular.module("ngSchemaFormFile",["ngFileUpload","ngMessages","pascalprecht.translate"]).controller("ngSchemaFileController",["$scope","Upload","$interpolate","$translate","$timeout","$q",function(e,r,i,l,a,o){function n(i){function l(e){e&&!e.$error&&s.url&&(e.upload=r.upload({url:s.url,file:e,data:{metadata:m.$modelValue}}),e.upload.then(function(r){a(function(){e.result=r.data}),m.$modelValue?m.$setViewValue(angular.merge(m.$modelValue,r.data)):m.$setViewValue(r.data),m.$commitViewValue();var i=s.form&&s.form.saveFormAfterUploaded;i&&s.$emit("rdsSchemaFormCtrl.save",{source:"ngSchemaFile",file:e,form:s.form})},function(r){r.status>0&&(s.errorMsg="File Upload Failed!",delete e.progress)}),e.upload.progress(function(r){s.errorMsg?delete e.progress:e.progress=Math.min(100,parseInt(100*r.loaded/r.total))}))}function o(e){for(var r="",i=s.$$prevSibling;i&&i.form&&i.form.key&&i.form.key.join(".").startsWith(s.form.key.join("."));)i.form.required=e,i.$broadcast("schemaFormValidate"),r+="model."+i.form.key.join(".")+"&&",i=i.$$prevSibling;r.length>0&&(r=r.substring(0,r.length-2)),s.fieldToWatch=r}m=i,s=e,s.url=s.form&&s.form.endpoint,s.isSinglefileUpload=s.form&&s.form.schema&&"singlefile"===s.form.schema.format,s.selectFile=function(e){if(e&&(s.picFile=e,s.$$prevSibling&&s.$$prevSibling.form&&s.$$prevSibling.form.key.join(".").startsWith(s.form.key.join(".")))){o(!0);var r="evalExpr('"+s.fieldToWatch+"',{ model: model, 'arrayIndex': 0, 'modelValue': ''})";s.removeWatchForRequireMetadata=s.$watch(r,function(e){e?s.$broadcast("schemaForm.error."+s.getModelPath().join("."),"requireMetadata",null,!0):s.$broadcast("schemaForm.error."+s.getModelPath().join("."),"requireMetadata",null,!1)})}},s.selectFiles=function(e){s.picFiles=e},s.uploadFile=function(e){e&&l(e)},s.uploadFiles=function(e){e.length&&angular.forEach(e,function(e){l(e)})},s.removeFile=function(){s.isSinglefileUpload&&(s.picFile&&s.picFile.result&&(m.$setViewValue(),m.$commitViewValue()),s.picFile=null,s.removeWatchForRequireMetadata&&(s.removeWatchForRequireMetadata(),delete s.removeWatchForRequireMetadata,s.$broadcast("schemaForm.error."+s.form.key.join("."),"requireMetadata",!0),o(!1)))},s.validateField=function(){s.uploadForm.file&&s.uploadForm.file.$valid&&s.picFile&&!s.picFile.$error||s.uploadForm.files&&s.uploadForm.files.$valid&&s.picFiles&&!s.picFiles.$error},s.submit=function(){s.uploadForm.file&&s.uploadForm.file.$valid&&s.picFile&&!s.picFile.$error?s.uploadFile(s.picFile):s.uploadForm.files&&s.uploadForm.files.$valid&&s.picFiles&&!s.picFiles.$error&&s.uploadFiles(s.picFiles)},s.$on("schemaFormValidate",s.validateField),s.$on("schemaFormFileUploadSubmit",s.submit)}var t=this,s=null,m=null;t.init=n,e.initInternalModel=function(r){r&&r.type&&r.name&&(e.picFile={},e.picFile.result=r,e.picFile.name=r.name,e.picFile.progress=100,e.picFile.size=0,e.picFile.type=r.type)},e.interpValidationMessage=function(e){var r=e.$error,a=s.form,o=a.validationMessage[r],n={error:r,file:e,form:a,schema:a.schema,title:a.title||a.schema&&a.schema.title},t=i(o)(n);return l.instant(t)}}]).directive("ngSchemaFile",function(){return{restrict:"A",scope:!0,controller:"ngSchemaFileController",controllerAs:"fileUploadCtrl",require:"ngModel",link:function(e,r,i,l){e.fileUploadCtrl.init(l)}}}),angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.html",'<ng-form class="file-upload mb-lg" ng-schema-file schema-validate="form" sf-field-model="replaceAll" ng-init="initInternalModel($$value$$)" ng-model="$$value$$" name="uploadForm">\r\n  <label ng-show="form.title && form.notitle !== true" class="control-label" for="fileInputButton" ng-class="{\'sr-only\': !showTitle(), \'text-danger\': uploadForm.$error.required && !uploadForm.$pristine}">\r\n    {{ form.title }}<i ng-show="form.required">&nbsp;*</i>\r\n  </label>\r\n\r\n  <div ng-show="picFile" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\r\n    <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html\'" class="mb"></div>\r\n    <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html\'" class="mb"></div>\r\n    <span class="help-block" sf-message="form.description"></span>\r\n  </div>\r\n\r\n  <ul ng-show="picFiles && picFiles.length" class="list-group">\r\n    <li class="list-group-item" ng-repeat="picFile in picFiles">\r\n      <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html\'"></div>\r\n      <div ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html\'" class="mb"></div>\r\n    </li>\r\n  </ul>\r\n\r\n  <div ng-show="(isSinglefileUpload && !picFile) || (!isSinglefileUpload && (!picFiles || !picFiles.length))" class="well well-sm bg-white mb" ng-class="{\'has-error border-danger\': (uploadForm.$error.required && !uploadForm.$pristine) || (hasError() && errorMessage(schemaError()))}">\r\n    <small class="text-muted" ng-show="form.description" ng-bind-html="form.description"></small>\r\n    <div ng-if="isSinglefileUpload" ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.single.html\'"></div>\r\n    <div ng-if="!isSinglefileUpload" ng-include="\'directives/decorators/bootstrap/nwp-file/schema-form-file.template.multiple.html\'"></div>\r\n    <!--<div class="help-block mb0" ng-show="uploadForm.$error.required && !uploadForm.$pristine">{{ \'modules.attribute.fields.required.caption\' | translate }}</div>-->\r\n    <span class="help-block" sf-message="form.description"></span>\r\n  </div>\r\n</ng-form>\r\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.errors.html",'<div ng-messages="uploadForm.$error" ng-messages-multiple="">\r\n  <div class="text-danger errorMsg" ng-message="maxSize">{{ interpValidationMessage(picFile) }}</div>\r\n  <div class="text-danger errorMsg" ng-message="mimeType">{{ interpValidationMessage(picFile) }}</div>\r\n  <div class="text-danger errorMsg" ng-message="maxItems">{{ interpValidationMessage(picFile) }}</div>\r\n  <div class="text-danger errorMsg" ng-message="minItems">{{ interpValidationMessage(picFile) }}</div>\r\n  <div class="text-danger errorMsg" ng-show="errorMsg">{{ errorMsg }}</div>\r\n</div>'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.multiple.html",'<div ngf-drop="selectFiles(picFiles)" ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true"\r\n    ng-model="picFiles" name="files"\r\n    ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\r\n    ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\r\n    ng-required="form.required"\r\n    accept="{{form.schema.mimeType}}"\r\n    ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\r\n  <p class="text-center">{{ \'modules.upload.descriptionMultifile\' | translate }}</p>\r\n</div>\r\n<div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\r\n\r\n<button ngf-select="selectFiles(picFiles)" type="file" ngf-multiple="true" multiple ng-model="picFiles" name="files"\r\n       ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\r\n       ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\r\n       ng-required="form.required"\r\n       accept="{{form.schema.mimeType}}"\r\n       ng-model-options="form.ngModelOptions" id="fileInputButton"\r\n       class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\r\n  <fa fw="fw" name="upload" class="mr-sm"></fa>\r\n  {{ "buttons.add" | translate }}\r\n</button>\r\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.progress.html",'<div class="row mb">\r\n  <div class="col-sm-4 mb-sm">\r\n     <label title="{{ \'modules.upload.field.preview\' | translate }}" class="text-info">{{\r\n        \'modules.upload.field.preview\' | translate }}</label>\r\n     <img ngf-src="picFile" class="img-thumbnail img-responsive">\r\n     <div class="img-placeholder"\r\n          ng-class="{\'show\': picFile.$invalid && !picFile.blobUrl, \'hide\': !picFile || picFile.blobUrl}">No preview available\r\n     </div>\r\n  </div>\r\n  <div class="col-sm-4 mb-sm">\r\n     <label title="{{ \'modules.upload.field.filename\' | translate }}" class="text-info">{{\r\n        \'modules.upload.field.filename\' | translate }}</label>\r\n     <div class="filename" title="{{ picFile.name }}">{{ picFile.name }}</div>\r\n  </div>\r\n  <div class="col-sm-4 mb-sm">\r\n     <label title="{{ \'modules.upload.field.progress\' | translate }}" class="text-info">{{\r\n        \'modules.upload.field.progress\' | translate }}</label>\r\n     <div class="progress">\r\n        <div class="progress-bar progress-bar-striped" role="progressbar"\r\n             ng-class="{\'progress-bar-success\': picFile.progress == 100}"\r\n             ng-style="{width: picFile.progress + \'%\'}">\r\n           {{ picFile.progress }} %\r\n        </div>\r\n     </div>\r\n     <button class="btn btn-primary btn-sm" type="button" ng-click="uploadFile(picFile)"\r\n             ng-disabled="ngModel.$error.requireMetadata||!picFile || picFile.result || picFile.$error">{{ !picFile.result ?  "buttons.upload" : "buttons.uploaded" | translate }}\r\n     </button>\r\n     <button class="btn btn-danger btn-sm" type="button" ng-click="removeFile(picFile)"\r\n             ng-disabled="!picFile">{{ "buttons.remove" | translate }}\r\n     </button>\r\n  </div>\r\n</div>\r\n'),e.put("directives/decorators/bootstrap/nwp-file/schema-form-file.template.single.html",'<div ngf-drop="selectFile(picFile)" ngf-select="selectFile(picFile)" type="file" ngf-multiple="false"\r\n    ng-model="picFile" name="file"\r\n    ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\r\n    ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\r\n    ng-required="form.required"\r\n    accept="{{form.schema.mimeType}}"\r\n    ng-model-options="form.ngModelOptions" ngf-drag-over-class="dragover" class="drop-box dragAndDropDescription">\r\n  <p class="text-center">{{ \'modules.upload.descriptionSinglefile\' | translate }}</p>\r\n</div>\r\n<div ngf-no-file-drop>{{ \'modules.upload.dndNotSupported\' | translate}}</div>\r\n\r\n<button ngf-select="selectFile(picFile)" type="file" ngf-multiple="false" ng-model="picFile" name="file"\r\n       ng-attr-ngf-mimeType="{{form.schema.mimeType ? form.schema.mimeType : undefined }}"\r\n       ng-attr-ngf-max-size="{{form.schema.maxSize ? form.schema.maxSize : undefined }}"\r\n       ng-required="form.required"\r\n       accept="{{form.schema.mimeType}}"\r\n       ng-model-options="form.ngModelOptions" id="fileInputButton"\r\n       class="btn btn-primary btn-block {{form.htmlClass}} mt-lg mb">\r\n  <fa fw="fw" name="upload" class="mr-sm"></fa>\r\n  {{ "buttons.add" | translate }}\r\n</button>\r\n')}]);